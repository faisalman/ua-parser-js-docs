import{_ as e,c as s,o as a,ah as n}from"./chunks/framework.YsV5rkgK.js";const g=JSON.parse('{"title":"UAParser : getEngine()","description":"","frontmatter":{},"headers":[],"relativePath":"api/main/get-engine.md","filePath":"api/main/get-engine.md","lastUpdated":1758387667000}'),t={name:"api/main/get-engine.md"};function l(h,i,r,p,o,d){return a(),s("div",null,i[0]||(i[0]=[n(`<h1 id="uaparser-getengine" tabindex="-1"><a href="/api/main/overview.html">UAParser</a> : getEngine() <a class="header-anchor" href="#uaparser-getengine" aria-label="Permalink to “UAParser : getEngine()”">​</a></h1><p><code>getEngine(): IEngine</code></p><p>Get layout rendering engine name &amp; version from user-agent string.</p><h2 id="properties-of-iengine" tabindex="-1">Properties of <code>IEngine</code>: <a class="header-anchor" href="#properties-of-iengine" aria-label="Permalink to “Properties of IEngine:”">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Engine object is structured as follow:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{ </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="name-string" tabindex="-1"><code>name?: string</code> <a class="header-anchor" href="#name-string" aria-label="Permalink to “name?: string”">​</a></h3><div class="info custom-block"><p class="custom-block-title custom-block-title-default">INFO</p><p>See list of possible engine name <a href="/info/engine/name.html">here</a>.</p></div><hr><h3 id="version-string" tabindex="-1"><code>version?: string</code> <a class="header-anchor" href="#version-string" aria-label="Permalink to “version?: string”">​</a></h3><p>Determined dynamically.</p><h2 id="methods-of-iengine" tabindex="-1">Methods of <code>IEngine</code> <a class="header-anchor" href="#methods-of-iengine" aria-label="Permalink to “Methods of IEngine”">​</a></h2><p>Inherited from <code>IData</code>:</p><ul><li><a href="/api/main/idata/is.html"><code>is(value: string): boolean</code></a></li><li><a href="/api/main/idata/to-string.html"><code>toString(): string</code></a></li><li><a href="/api/main/idata/with-client-hints.html"><code>withClientHints&lt;IEngine&gt;(): PromiseLike&lt;IEngine&gt; | IEngine</code></a></li><li><a href="/api/main/idata/with-feature-check.html"><code>withFeatureCheck&lt;IEngine&gt;(): PromiseLike&lt;IEngine&gt; | IEngine</code></a></li></ul><h2 id="code-example" tabindex="-1">Code Example <a class="header-anchor" href="#code-example" aria-label="Permalink to “Code Example”">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> operamini</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Opera/9.80 (J2ME/MIDP; Opera Mini/5.1.21214/19.916; U; en) Presto/2.5.25&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> parser</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UAParser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(operamini);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parser.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEngine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// { name : &quot;Presto&quot;, version : &quot;2.5.25&quot; }</span></span></code></pre></div>`,15)]))}const c=e(t,[["render",l]]);export{g as __pageData,c as default};

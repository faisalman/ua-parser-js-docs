import{_ as i,c as a,a2 as n,o as e}from"./chunks/framework.Cv6Grnpd.js";const c=JSON.parse('{"title":"How to Detect Windows 11","description":"","frontmatter":{},"headers":[],"relativePath":"guides/how-to-detect-windows-11-using-javascript.md","filePath":"guides/how-to-detect-windows-11-using-javascript.md","lastUpdated":1728740851000}'),t={name:"guides/how-to-detect-windows-11-using-javascript.md"};function l(p,s,h,r,o,k){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="how-to-detect-windows-11" tabindex="-1">How to Detect Windows 11 <a class="header-anchor" href="#how-to-detect-windows-11" aria-label="Permalink to &quot;How to Detect Windows 11&quot;">â€‹</a></h1><p>It&#39;s currently impossible to detect Windows 11 only from user-agent data, since most browser vendors are unknowingly cap the Windows version at 10.</p><p>Luckily, there is a workaround by utilizing client hints feature:</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> uap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UAParser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> uap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getOS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Based on user agent: &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, os); </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// { name: &quot;Windows&quot;, version: &quot;10&quot; }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getOS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withClientHints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">os</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Based on client hints&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, os); </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // { name: &quot;Windows&quot;, version: &quot;11&quot; }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Client hints feature is only supported in Chromium-based browsers (Chrome, Edge, etc.). In other browsers like Firefox and Safari, <code>withClientHints()</code> gives no effect to the result, thus it will still be detected as Windows 10.</p></div><p>References:</p><ul><li><a href="/api/main/idata/with-client-hints.html"><code>withClientHints()</code></a></li><li><a href="https://learn.microsoft.com/en-us/microsoft-edge/web-platform/how-to-detect-win11" target="_blank" rel="noreferrer">https://learn.microsoft.com/en-us/microsoft-edge/web-platform/how-to-detect-win11</a></li></ul>`,7)]))}const E=i(t,[["render",l]]);export{c as __pageData,E as default};

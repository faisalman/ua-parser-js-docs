import{_ as s,c as e,o as a,ah as t}from"./chunks/framework.YsV5rkgK.js";const c=JSON.parse('{"title":"withFeatureCheck<T>(): PromiseLike<T> | T","description":"","frontmatter":{},"headers":[],"relativePath":"api/main/idata/with-feature-check.md","filePath":"api/main/idata/with-feature-check.md","lastUpdated":1730299192000}'),n={name:"api/main/idata/with-feature-check.md"};function l(h,i,r,p,k,o){return a(),e("div",null,i[0]||(i[0]=[t(`<h1 id="withfeaturecheck-t-promiselike-t-t" tabindex="-1"><code>withFeatureCheck&lt;T&gt;(): PromiseLike&lt;T&gt; | T</code> <a class="header-anchor" href="#withfeaturecheck-t-promiselike-t-t" aria-label="Permalink to “withFeatureCheck&lt;T&gt;(): PromiseLike&lt;T&gt; | T”">​</a></h1><p>This method allows us to examine other features beyond <code>navigator.userAgent</code>. Currently this further improve the detection of the following:</p><ul><li>browser : <ul><li>Brave (check for <code>navigator.isBrave</code>)</li></ul></li><li>device : <ul><li>iPad (check for <code>navigator.standalone</code> &amp; <code>navigator.maxTouchPoints</code>)</li></ul></li></ul><h2 id="code-example" tabindex="-1">Code Example <a class="header-anchor" href="#code-example" aria-label="Permalink to “Code Example”">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// suppose this code runs on iPad</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> withoutFeatureCheck</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UAParser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> withFeatureCheck</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UAParser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withFeatureCheck</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(withoutFeatureCheck.device); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// { vendor : &quot;Apple&quot;, model : &quot;Macintosh&quot;, type : undefined }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(withFeatureCheck.device);    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// { vendor : &quot;Apple&quot;, model : &quot;iPad&quot;, type : &quot;tablet&quot; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,5)]))}const u=s(n,[["render",l]]);export{c as __pageData,u as default};

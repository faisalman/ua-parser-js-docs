import{_ as i,c as e,o as s,ag as t}from"./chunks/framework.Ci81k3SU.js";const k=JSON.parse('{"title":"UAParser : getCPU()","description":"","frontmatter":{},"headers":[],"relativePath":"api/main/get-cpu.md","filePath":"api/main/get-cpu.md","lastUpdated":1760630407000}'),h={name:"api/main/get-cpu.md"};function r(l,a,n,p,c,d){return s(),e("div",null,a[0]||(a[0]=[t(`<h1 id="uaparser-getcpu" tabindex="-1"><a href="/api/main/overview.html#methods">UAParser</a> : getCPU() <a class="header-anchor" href="#uaparser-getcpu" aria-label="Permalink to “UAParser : getCPU()”">​</a></h1><p><code>getCPU(): ICPU</code></p><p>Returns the CPU architecture name.</p><h2 id="icpu" tabindex="-1"><code>ICPU</code> <a class="header-anchor" href="#icpu" aria-label="Permalink to “ICPU”">​</a></h2><h3 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to “Properties”">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{ </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    architecture</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="architecture-string" tabindex="-1">architecture?: string <a class="header-anchor" href="#architecture-string" aria-label="Permalink to “architecture?: string”">​</a></h4><p>The detected CPU architecture (e.g. <code>arm</code>, <code>amd64</code>, <code>ppc</code>, <code>x86</code>).</p><div class="info custom-block"><p class="custom-block-title custom-block-title-default">INFO</p><p>See list of possible CPU architectures <a href="/info/cpu/arch.html">here</a>.</p></div><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to “Methods”">​</a></h3><h4 id="inherited-from-idata" tabindex="-1">Inherited from <code>IData</code>: <a class="header-anchor" href="#inherited-from-idata" aria-label="Permalink to “Inherited from IData:”">​</a></h4><ul><li><a href="/api/main/idata/is.html"><code>is(value: string): boolean</code></a></li><li><a href="/api/main/idata/to-string.html"><code>toString(): string</code></a></li><li><a href="/api/main/idata/with-client-hints.html"><code>withClientHints&lt;ICPU&gt;(): PromiseLike&lt;ICPU&gt; | ICPU</code></a></li><li><a href="/api/main/idata/with-feature-check.html"><code>withFeatureCheck&lt;ICPU&gt;(): PromiseLike&lt;ICPU&gt; | ICPU</code></a></li></ul><h3 id="code-example" tabindex="-1">Code Example <a class="header-anchor" href="#code-example" aria-label="Permalink to “Code Example”">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> powerpc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Mozilla/4.0 (compatible; MSIE 5.17; Mac_PowerPC Mac OS; en)&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> parser</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UAParser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(powerpc);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parser.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCPU</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// { architecture : &quot;ppc&quot; }</span></span></code></pre></div>`,14)]))}const g=i(h,[["render",r]]);export{k as __pageData,g as default};

import{_ as i,c as s,o as a,ag as n}from"./chunks/framework.B-s2ZzRv.js";const k=JSON.parse('{"title":"getDevice(): IDevice","description":"","frontmatter":{},"headers":[],"relativePath":"api/main/get-device.md","filePath":"api/main/get-device.md","lastUpdated":1734445139000}'),t={name:"api/main/get-device.md"};function l(r,e,p,h,d,o){return a(),s("div",null,e[0]||(e[0]=[n(`<h1 id="getdevice-idevice" tabindex="-1"><code>getDevice(): IDevice</code> <a class="header-anchor" href="#getdevice-idevice" aria-label="Permalink to “getDevice(): IDevice”">​</a></h1><p>Get details of device information (type, vendor, model) from user-agent string.</p><h2 id="properties-of-idevice" tabindex="-1">Properties of <code>IDevice</code> <a class="header-anchor" href="#properties-of-idevice" aria-label="Permalink to “Properties of IDevice”">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Device object is structured as follow:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{ </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    vendor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="type-string" tabindex="-1"><code>type?: string</code> <a class="header-anchor" href="#type-string" aria-label="Permalink to “type?: string”">​</a></h3><div class="info custom-block"><p class="custom-block-title">INFO</p><p>See list of possible device type <a href="/info/device/type.html">here</a>.</p></div><hr><h3 id="vendor-string" tabindex="-1"><code>vendor?: string</code> <a class="header-anchor" href="#vendor-string" aria-label="Permalink to “vendor?: string”">​</a></h3><div class="info custom-block"><p class="custom-block-title">INFO</p><p>See list of possible device vendor <a href="/info/device/vendor.html">here</a>.</p></div><hr><h3 id="model-string" tabindex="-1"><code>model?: string</code> <a class="header-anchor" href="#model-string" aria-label="Permalink to “model?: string”">​</a></h3><p>Determined dynamically.</p><h2 id="methods-of-idevice" tabindex="-1">Methods of <code>IDevice</code> <a class="header-anchor" href="#methods-of-idevice" aria-label="Permalink to “Methods of IDevice”">​</a></h2><p>Inherited from <code>IData</code>:</p><ul><li><a href="/api/main/idata/is.html"><code>is(value: string): boolean</code></a></li><li><a href="/api/main/idata/to-string.html"><code>toString(): string</code></a></li><li><a href="/api/main/idata/with-client-hints.html"><code>withClientHints&lt;IDevice&gt;(): PromiseLike&lt;IDevice&gt; | IDevice</code></a></li><li><a href="/api/main/idata/with-feature-check.html"><code>withFeatureCheck&lt;IDevice&gt;(): PromiseLike&lt;IDevice&gt; | IDevice</code></a></li></ul><h2 id="code-example" tabindex="-1">Code Example <a class="header-anchor" href="#code-example" aria-label="Permalink to “Code Example”">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> galaxytabs8</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Mozilla/5.0 (Linux; Android 12; SM-X706B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.53 Safari/537.36&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> parser</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UAParser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(galaxytabs8);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parser.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getDevice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// { type : &quot;tablet&quot;, vendor : &quot;Samsung&quot;, model : &quot;SM-X706B&quot; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,17)]))}const g=i(t,[["render",l]]);export{k as __pageData,g as default};

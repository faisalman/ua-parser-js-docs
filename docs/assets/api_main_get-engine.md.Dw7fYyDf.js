import{_ as e,c as a,a2 as s,o as n}from"./chunks/framework.Cv6Grnpd.js";const k=JSON.parse('{"title":"getEngine(): IEngine","description":"","frontmatter":{},"headers":[],"relativePath":"api/main/get-engine.md","filePath":"api/main/get-engine.md","lastUpdated":1731893778000}'),t={name:"api/main/get-engine.md"};function l(r,i,h,p,o,d){return n(),a("div",null,i[0]||(i[0]=[s('<h1 id="getengine-iengine" tabindex="-1"><code>getEngine(): IEngine</code> <a class="header-anchor" href="#getengine-iengine" aria-label="Permalink to &quot;`getEngine(): IEngine`&quot;">​</a></h1><p>Get layout rendering engine name &amp; version from user-agent string.</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Result object is structured as follow:</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{ </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="properties-of-iengine" tabindex="-1">Properties of <code>IEngine</code>: <a class="header-anchor" href="#properties-of-iengine" aria-label="Permalink to &quot;Properties of `IEngine`:&quot;">​</a></h2><h3 id="name-string" tabindex="-1"><code>name?: string</code> <a class="header-anchor" href="#name-string" aria-label="Permalink to &quot;`name?: string`&quot;">​</a></h3><ul><li><a href="/info/engine/name.html">List of possible <code>engine.name</code></a></li></ul><h3 id="version-string" tabindex="-1"><code>version?: string</code> <a class="header-anchor" href="#version-string" aria-label="Permalink to &quot;`version?: string`&quot;">​</a></h3><p>Determined dynamically</p><h2 id="methods-inherited-from-idata" tabindex="-1">Methods inherited from <code>IData</code>: <a class="header-anchor" href="#methods-inherited-from-idata" aria-label="Permalink to &quot;Methods inherited from `IData`:&quot;">​</a></h2><ul><li><a href="/api/main/idata/is.html"><code>is(value: string): boolean</code></a></li><li><a href="/api/main/idata/to-string.html"><code>toString(): string</code></a></li><li><a href="/api/main/idata/with-client-hints.html"><code>withClientHints&lt;IEngine&gt;(): PromiseLike&lt;IEngine&gt; | IEngine</code></a></li><li><a href="/api/main/idata/with-feature-check.html"><code>withFeatureCheck&lt;IEngine&gt;(): PromiseLike&lt;IEngine&gt; | IEngine</code></a></li></ul><h2 id="code-example" tabindex="-1">Code Example <a class="header-anchor" href="#code-example" aria-label="Permalink to &quot;Code Example&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> operamini</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Opera/9.80 (J2ME/MIDP; Opera Mini/5.1.21214/19.916; U; en) Presto/2.5.25&#39;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> parser</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UAParser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(operamini);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parser.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEngine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// { name : &quot;Presto&quot;, version : &quot;2.5.25&quot; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',12)]))}const c=e(t,[["render",l]]);export{k as __pageData,c as default};

import{_ as t,c as d,o,ah as a}from"./chunks/framework.YsV5rkgK.js";const h=JSON.parse('{"title":"IDevice . type","description":"","frontmatter":{},"headers":[],"relativePath":"info/device/type.md","filePath":"info/device/type.md","lastUpdated":1741510753000}'),c={name:"info/device/type.md"};function s(r,e,i,l,n,p){return o(),d("div",null,e[0]||(e[0]=[a('<h1 id="idevice-type" tabindex="-1"><a href="/api/main/get-device.html"><code>IDevice</code></a> . <code>type</code> <a class="header-anchor" href="#idevice-type" aria-label="Permalink to “IDevice . type”">​</a></h1><p>Here is a list of possible values for <code>device.type</code>:</p><table tabindex="0"><thead><tr><th><code>device.type</code></th><th>Description</th><th>Examples</th></tr></thead><tbody><tr><td><code>console</code></td><td>Gaming consoles or similar dedicated gaming devices.</td><td><code>Sony PlayStation</code>, <code>Microsoft Xbox</code></td></tr><tr><td><code>embedded</code></td><td>Devices integrated into other systems like smart home appliances, car head units, or dedicated kiosk machines.</td><td><code>Amazon Echo Dot</code>, <code>Tesla</code></td></tr><tr><td><code>mobile</code></td><td>Mobile phones / smartphones designed for portable use.</td><td><code>Apple iPhone</code>, <code>Samsung Galaxy</code></td></tr><tr><td><code>smarttv</code></td><td>Smart TVs or similar devices.</td><td><code>LG Smart TV</code>, <code>Samsung Smart TV</code></td></tr><tr><td><code>tablet</code></td><td>Portable touchscreen devices larger than smartphones but smaller than laptops.</td><td><code>Apple iPad</code>, <code>Samsung Galaxy Tab</code></td></tr><tr><td><code>wearable</code></td><td>Devices worn on the body, such as smartwatches or fitness trackers.</td><td><code>Pebble</code>, <code>Apple Watch</code></td></tr><tr><td><code>xr</code></td><td>Extended reality (XR) devices, encompassing virtual reality (VR) and augmented reality (AR) headsets.</td><td><code>Google Glass</code>, <code>Oculus Quest</code></td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title custom-block-title-default">TIP</p><p>If you wish to detect <strong>desktop</strong> devices, you must handle the logic yourself, since UAParser only reports info that is directly available from user-agent string (read more about this issue <a href="https://github.com/faisalman/ua-parser-js/issues/182" target="_blank" rel="noreferrer">here🡭</a>).</p></div>',4)]))}const u=t(c,[["render",s]]);export{h as __pageData,u as default};

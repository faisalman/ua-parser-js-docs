import{_ as a,c as e,o as s,ah as t}from"./chunks/framework.YsV5rkgK.js";const c=JSON.parse('{"title":"IData : withFeatureCheck()","description":"","frontmatter":{},"headers":[],"relativePath":"api/main/idata/with-feature-check.md","filePath":"api/main/idata/with-feature-check.md","lastUpdated":1758387667000}'),h={name:"api/main/idata/with-feature-check.md"};function n(l,i,r,k,p,o){return s(),e("div",null,i[0]||(i[0]=[t(`<h1 id="idata-withfeaturecheck" tabindex="-1"><a href="/api/main/overview.html#methods">IData</a> : withFeatureCheck() <a class="header-anchor" href="#idata-withfeaturecheck" aria-label="Permalink to “IData : withFeatureCheck()”">​</a></h1><p><code>withFeatureCheck&lt;T&gt;(): PromiseLike&lt;T&gt; | T</code></p><p>This method allows us to examine other features beyond <code>navigator.userAgent</code>. Currently this further improve the detection of the following:</p><ul><li>browser : <ul><li>Brave (check for <code>navigator.isBrave</code>)</li></ul></li><li>device : <ul><li>iPad (check for <code>navigator.standalone</code> &amp; <code>navigator.maxTouchPoints</code>)</li></ul></li></ul><h2 id="code-example" tabindex="-1">Code Example <a class="header-anchor" href="#code-example" aria-label="Permalink to “Code Example”">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// suppose this code runs on iPad</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> withoutFeatureCheck</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UAParser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> withFeatureCheck</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UAParser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withFeatureCheck</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(withoutFeatureCheck.device); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// { vendor : &quot;Apple&quot;, model : &quot;Macintosh&quot;, type : undefined }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(withFeatureCheck.device);    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// { vendor : &quot;Apple&quot;, model : &quot;iPad&quot;, type : &quot;tablet&quot; }</span></span></code></pre></div>`,6)]))}const u=a(h,[["render",n]]);export{c as __pageData,u as default};

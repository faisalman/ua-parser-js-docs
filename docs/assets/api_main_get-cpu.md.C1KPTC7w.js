import{_ as a,c as s,o as e,ag as t}from"./chunks/framework.CSiu8Pll.js";const k=JSON.parse('{"title":"UAParser : getCPU()","description":"","frontmatter":{},"headers":[],"relativePath":"api/main/get-cpu.md","filePath":"api/main/get-cpu.md","lastUpdated":1758387667000}'),l={name:"api/main/get-cpu.md"};function n(h,i,r,p,c,o){return e(),s("div",null,i[0]||(i[0]=[t(`<h1 id="uaparser-getcpu" tabindex="-1"><a href="/api/main/overview.html">UAParser</a> : getCPU() <a class="header-anchor" href="#uaparser-getcpu" aria-label="Permalink to “UAParser : getCPU()”">​</a></h1><p><code>getCPU(): ICPU</code></p><p>Get type of CPU architecture from user-agent string.</p><h2 id="properties-of-icpu" tabindex="-1">Properties of <code>ICPU</code> <a class="header-anchor" href="#properties-of-icpu" aria-label="Permalink to “Properties of ICPU”">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// CPU object is structured as follow:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{ </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    architecture</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="architecture-string" tabindex="-1"><code>architecture?: string</code> <a class="header-anchor" href="#architecture-string" aria-label="Permalink to “architecture?: string”">​</a></h3><div class="info custom-block"><p class="custom-block-title custom-block-title-default">INFO</p><p>See list of possible cpu architecture <a href="/info/cpu/arch.html">here</a>.</p></div><h2 id="methods-of-icpu" tabindex="-1">Methods of <code>ICPU</code> <a class="header-anchor" href="#methods-of-icpu" aria-label="Permalink to “Methods of ICPU”">​</a></h2><p>Inherited from <code>IData</code>:</p><ul><li><a href="/api/main/idata/is.html"><code>is(value: string): boolean</code></a></li><li><a href="/api/main/idata/to-string.html"><code>toString(): string</code></a></li><li><a href="/api/main/idata/with-client-hints.html"><code>withClientHints&lt;ICPU&gt;(): PromiseLike&lt;ICPU&gt; | ICPU</code></a></li><li><a href="/api/main/idata/with-feature-check.html"><code>withFeatureCheck&lt;ICPU&gt;(): PromiseLike&lt;ICPU&gt; | ICPU</code></a></li></ul><h2 id="code-example" tabindex="-1">Code Example <a class="header-anchor" href="#code-example" aria-label="Permalink to “Code Example”">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> powerpc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Mozilla/4.0 (compatible; MSIE 5.17; Mac_PowerPC Mac OS; en)&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> parser</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UAParser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(powerpc);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parser.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCPU</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// { architecture : &quot;ppc&quot; }</span></span></code></pre></div>`,12)]))}const g=a(l,[["render",n]]);export{k as __pageData,g as default};

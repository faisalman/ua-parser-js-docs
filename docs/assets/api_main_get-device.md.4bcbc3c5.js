import{_ as e,c as a,o as s,N as n}from"./chunks/framework.2ea5d489.js";const y=JSON.parse('{"title":"getDevice(): IDevice","description":"","frontmatter":{},"headers":[],"relativePath":"api/main/get-device.md","lastUpdated":1731893778000}'),o={name:"api/main/get-device.md"},t=n('<h1 id="getdevice-idevice" tabindex="-1"><code>getDevice(): IDevice</code> <a class="header-anchor" href="#getdevice-idevice" aria-label="Permalink to &quot;`getDevice(): IDevice`&quot;">​</a></h1><p>Get details of device information (type, vendor, model) from user-agent string.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Result object is structured as follow:</span></span>\n<span class="line"><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">vendor</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">model</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="properties-of-idevice" tabindex="-1">Properties of <code>IDevice</code>: <a class="header-anchor" href="#properties-of-idevice" aria-label="Permalink to &quot;Properties of `IDevice`:&quot;">​</a></h2><h3 id="type-string" tabindex="-1"><code>type?: string</code> <a class="header-anchor" href="#type-string" aria-label="Permalink to &quot;`type?: string`&quot;">​</a></h3><ul><li><a href="/info/device/type.html">List of possible <code>device.type</code></a></li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>If you wish to detect desktop devices, you must handle the logic yourself, since <code>UAParser</code> only reports info that is directly available from user-agent string. Read more about this issue <a href="https://github.com/faisalman/ua-parser-js/issues/182" target="_blank" rel="noreferrer">here↗</a></p></div><h3 id="vendor-string" tabindex="-1"><code>vendor?: string</code> <a class="header-anchor" href="#vendor-string" aria-label="Permalink to &quot;`vendor?: string`&quot;">​</a></h3><ul><li><a href="/info/device/vendor.html">List of possible <code>device.vendor</code></a></li></ul><h3 id="model-string" tabindex="-1"><code>model?: string</code> <a class="header-anchor" href="#model-string" aria-label="Permalink to &quot;`model?: string`&quot;">​</a></h3><p>Determined dynamically</p><h2 id="methods-inherited-from-idata" tabindex="-1">Methods inherited from <code>IData</code>: <a class="header-anchor" href="#methods-inherited-from-idata" aria-label="Permalink to &quot;Methods inherited from `IData`:&quot;">​</a></h2><ul><li><a href="/api/main/idata/is.html"><code>is(value: string): boolean</code></a></li><li><a href="/api/main/idata/to-string.html"><code>toString(): string</code></a></li><li><a href="/api/main/idata/with-client-hints.html"><code>withClientHints&lt;IDevice&gt;(): PromiseLike&lt;IDevice&gt; | IDevice</code></a></li><li><a href="/api/main/idata/with-feature-check.html"><code>withFeatureCheck&lt;IDevice&gt;(): PromiseLike&lt;IDevice&gt; | IDevice</code></a></li></ul><h2 id="code-example" tabindex="-1">Code Example <a class="header-anchor" href="#code-example" aria-label="Permalink to &quot;Code Example&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> galaxytabs8 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Mozilla/5.0 (Linux; Android 12; SM-X706B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.53 Safari/537.36</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> parser </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">UAParser</span><span style="color:#A6ACCD;">(galaxytabs8)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(parser</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getDevice</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// { type : &quot;tablet&quot;, vendor : &quot;Samsung&quot;, model : &quot;SM-X706B&quot; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',15),l=[t];function i(r,p,c,d,h,m){return s(),a("div",null,l)}const D=e(o,[["render",i]]);export{y as __pageData,D as default};

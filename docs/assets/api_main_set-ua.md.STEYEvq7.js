import{_ as a,c as i,o as e,ag as n}from"./chunks/framework.Ci81k3SU.js";const c=JSON.parse('{"title":"UAParser : setUA()","description":"","frontmatter":{},"headers":[],"relativePath":"api/main/set-ua.md","filePath":"api/main/set-ua.md","lastUpdated":1760630407000}'),t={name:"api/main/set-ua.md"};function l(r,s,p,h,k,d){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="uaparser-setua" tabindex="-1"><a href="/api/main/overview.html#methods">UAParser</a> : setUA() <a class="header-anchor" href="#uaparser-setua" aria-label="Permalink to “UAParser : setUA()”">​</a></h1><p><code>setUA(ua: string): UAParser</code></p><p>Sets a custom user-agent string to be parsed and returns the current <code>UAParser</code> instance.</p><h2 id="code-example" tabindex="-1">Code Example <a class="header-anchor" href="#code-example" aria-label="Permalink to “Code Example”">​</a></h2><p>Try this code on a browser console:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> parser</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UAParser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Prints the current browser&#39;s user-agent</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parser.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getUA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Replace it with a custom user-agent string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parser.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setUA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Mozilla/5.0 MyBrowser/1.0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Now it uses the new value we set before</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parser.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getUA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;Mozilla/5.0 MyBrowser/1.0&quot;</span></span></code></pre></div>`,6)]))}const g=a(t,[["render",l]]);export{c as __pageData,g as default};

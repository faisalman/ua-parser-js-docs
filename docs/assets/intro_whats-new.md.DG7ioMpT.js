import{_ as o,c as i,o as t,ag as r}from"./chunks/framework.CSiu8Pll.js";const h=JSON.parse(`{"title":"What's New in UAParser.js v2","description":"","frontmatter":{},"headers":[],"relativePath":"intro/whats-new.md","filePath":"intro/whats-new.md","lastUpdated":1734445139000}`),s={name:"intro/whats-new.md"};function c(l,e,n,a,d,u){return t(),i("div",null,e[0]||(e[0]=[r('<h1 id="what-s-new-in-uaparser-js-v2" tabindex="-1">What&#39;s New in UAParser.js v2 <a class="header-anchor" href="#what-s-new-in-uaparser-js-v2" aria-label="Permalink to “What&#39;s New in UAParser.js v2”">​</a></h1><h2 id="migrating-from-v1-to-v2" tabindex="-1">Migrating from v1 to v2 <a class="header-anchor" href="#migrating-from-v1-to-v2" aria-label="Permalink to “Migrating from v1 to v2”">​</a></h2><h3 id="what-s-breaking" tabindex="-1">What&#39;s Breaking: <a class="header-anchor" href="#what-s-breaking" aria-label="Permalink to “What&#39;s Breaking:”">​</a></h3><ul><li><p><strong>Licensing Changes:</strong></p><ul><li>UAParser.js is now licensed under AGPLv3 for open-source use, with PRO Licenses available for commercial/proprietary use</li></ul></li><li><p><strong>Browser Detection on Mobile Devices:</strong></p><ul><li><code>&quot;Chrome&quot;</code> =&gt; <code>&quot;Mobile Chrome&quot;</code></li><li><code>&quot;Firefox&quot;</code> =&gt; <code>&quot;Mobile Firefox&quot;</code></li></ul></li><li><p><strong>OS Detection:</strong></p><ul><li><code>&quot;Mac OS&quot;</code> =&gt; <code>&quot;macOS&quot;</code></li><li><code>&quot;Chromium OS&quot;</code> =&gt; <code>&quot;Chrome OS&quot;</code></li></ul></li></ul><h3 id="what-s-new" tabindex="-1">What&#39;s New: <a class="header-anchor" href="#what-s-new" aria-label="Permalink to “What&#39;s New:”">​</a></h3><ul><li><p><strong>Support for ES Modules &amp; TypeScript:</strong></p><ul><li>Import directly as an ES module with TypeScript support: <code>import { UAParser } from &#39;ua-parser-js&#39;</code></li></ul></li><li><p><strong>Support for Custom/Predefined Extensions:</strong></p><ul><li>Pass custom regexes or predefined extensions as a list to <code>UAParser()</code></li></ul></li><li><p><strong>Support for CLI Parsing:</strong></p><ul><li>Parse a user-agent directly from the command line using <code>npx ua-parser-js &quot;[User-Agent]&quot;</code></li></ul></li><li><p><strong>Enhanced Detection with Client Hints:</strong></p><ul><li><code>withClientHints()</code>: Improves detection accuracy by leveraging client hints</li></ul></li><li><p><strong>Enhanced Detection with Feature Detection:</strong></p><ul><li><code>withFeatureCheck()</code>: Refines detection results using feature detection</li></ul></li><li><p><strong>Simple Comparison for Detection Results:</strong></p><ul><li><code>is()</code>: Enables easy comparison checks against the detection result</li></ul></li><li><p><strong>Detailed Result Output:</strong></p><ul><li><code>toString()</code>: Returns the detection result in form of a full-name string</li></ul></li><li><p><strong>New Device Type:</strong></p><ul><li>Added <code>xr</code> to identify AR/VR devices</li></ul></li><li><p><strong>New Browser Property:</strong></p><ul><li>Added <code>browser.type</code> to identify additional browser types: <ul><li><code>crawler</code>, <code>cli</code>, <code>email</code>, <code>fetcher</code>, <code>inapp</code>, <code>library</code>, <code>mediaplayer</code></li></ul></li></ul></li><li><p><strong>New Submodules:</strong></p><ul><li><p><strong><code>&#39;ua-parser-js/enums&#39;</code></strong>: Provides constants for these specific properties:</p><ul><li><code>browser.name</code>, <code>browser.type</code>, <code>cpu.architecture</code>, <code>device.type</code>, <code>device.vendor</code>, <code>engine.name</code>, <code>os.name</code></li></ul></li><li><p><strong><code>&#39;ua-parser-js/extensions&#39;</code></strong>: Predefined extensions for various use cases:</p><ul><li><code>Bots</code>, <code>Crawlers</code>, <code>CLIs</code>, <code>Emails</code>, <code>ExtraDevices</code>, <code>Fetchers</code>, <code>InApps</code>, <code>Libraries</code>, <code>Mediaplayers</code></li></ul></li><li><p><strong><code>&#39;ua-parser-js/helpers&#39;</code></strong>: Provides utility methods to extend detection functionality:</p><ul><li><code>getDeviceVendor()</code>: Guesses the device vendor based on its model name</li><li><code>isAppleSilicon()</code>: Detects Apple Silicon device properties</li><li><code>isBot()</code>: Checks if the browser is a bot</li><li><code>isChromeFamily()</code>: Checks if the browser is Chrome-based (uses Blink engine) — e.g., New Opera, New Edge, Vivaldi, Brave, Arc, etc.</li><li><code>isElectron()</code>: Detects if current window is running within Electron</li><li><code>isFromEU()</code>: Detects if current browser&#39;s timezone is from an EU country</li><li><code>isFrozenUA()</code>: Checks if the user-agent matches a frozen/reduced user-agent pattern</li><li><code>isStandalonePWA()</code>: Detects if current window is a standalone PWA</li></ul></li></ul></li></ul>',6)]))}const g=o(s,[["render",c]]);export{h as __pageData,g as default};
